# ===========================================
# TODO APP CARITAS - ENVIRONMENT VARIABLES
# ===========================================
# Kopieren Sie diese Datei zu .env und passen Sie die Werte an

# ===========================================
# SUPABASE KONFIGURATION
# ===========================================

# Supabase Project URL
# Erhalten Sie diese aus Ihrem Supabase Dashboard → Settings → API
SUPABASE_URL="https://your-project-ref.supabase.co"

# Supabase Anon Public Key (für Client-seitige Operationen)
SUPABASE_ANON_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.your-anon-key"

# Supabase Service Role Secret (für Server-seitige Operationen mit Prisma)
SUPABASE_SERVICE_ROLE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.your-service-role-key"

# PostgreSQL Connection String (optional - wird automatisch aus Supabase-Keys generiert)
# Format: postgresql://postgres:[PASSWORD]@db.[PROJECT_REF].supabase.co:5432/postgres
# Falls nicht gesetzt, wird die URL automatisch aus SUPABASE_URL generiert
DATABASE_URL="postgresql://postgres:your-password@db.your-project-ref.supabase.co:5432/postgres"

# Supabase Database Password (nur nötig wenn DATABASE_URL nicht gesetzt ist)
SUPABASE_DB_PASSWORD="your-database-password"

# ===========================================
# NEXT-AUTH KONFIGURATION
# ===========================================

# URL der Anwendung (für lokale Entwicklung)
NEXTAUTH_URL="http://localhost:3000"

# Geheimer Schlüssel für JWT-Signierung (mindestens 32 Zeichen)
# Generieren Sie einen sicheren Schlüssel mit: openssl rand -base64 32
NEXTAUTH_SECRET="your-nextauth-secret-key-here-minimum-32-characters"

# ===========================================
# APP-KONFIGURATION
# ===========================================

# Port für lokale Entwicklung (optional, Standard: 3000)
PORT=3000

# ===========================================
# SICHERHEIT
# ===========================================

# Anzahl der bcrypt Salt-Runden für Passwort-Hashing
BCRYPT_SALT_ROUNDS=10

# ===========================================
# N8N WEBHOOK-INTEGRATION (OPTIONAL)
# ===========================================

# Token für eingehende Webhooks von n8n
# Muss mit dem Token in Ihrem n8n-Workflow übereinstimmen
INBOUND_WEBHOOK_TOKEN="your-secure-webhook-token"

# Mapping von Planka-Listen zu App-Status (JSON-Format)
# Priorität 1 = hohe Priorität, Priorität 2 = mittlere Priorität, Priorität 3 = niedrige Priorität
PLANKA_LIST_TO_STATUS='{"Priorität 1":"in_bearbeitung","Priorität 2":"offen","Priorität 3":"offen","Erledigt":"erledigt","Offen":"offen","In Bearbeitung":"in_bearbeitung"}'

# URL für ausgehende Webhooks an n8n
N8N_OUTBOUND_WEBHOOK_URL="https://your-n8n-instance.com/webhook/todo-app"

# Token für ausgehende Webhooks an n8n
N8N_OUTBOUND_TOKEN="your-n8n-webhook-token"

# ===========================================
# PRODUKTIONS-KONFIGURATION (VERCEL)
# ===========================================
# Diese Werte werden in Vercel Environment Variables gesetzt:

# Für Produktion:
# NEXTAUTH_URL="https://your-app-name.vercel.app"
# SUPABASE_URL="https://your-project-ref.supabase.co"
# SUPABASE_ANON_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.your-anon-key"
# SUPABASE_SERVICE_ROLE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.your-service-role-key"
# DATABASE_URL="postgresql://postgres:[PASSWORD]@db.[PROJECT_REF].supabase.co:5432/postgres"
# NEXTAUTH_SECRET="generated-secret-key"

# ===========================================
# LOKALE ENTWICKLUNG
# ===========================================
# Für lokale Entwicklung mit Supabase:

# 1. Erstellen Sie ein Supabase-Projekt
# 2. Kopieren Sie die Keys aus Settings → API:
#    - Project URL → SUPABASE_URL
#    - anon public → SUPABASE_ANON_KEY  
#    - service_role secret → SUPABASE_SERVICE_ROLE_KEY
# 3. Kopieren Sie die DATABASE_URL aus Settings → Database
# 4. Generieren Sie einen NEXTAUTH_SECRET
# 5. Starten Sie die App mit: npm run dev

# ===========================================
# DEPLOYMENT CHECKLIST
# ===========================================
# Vor dem Deployment auf Vercel:

# ✅ Supabase-Projekt erstellt
# ✅ Supabase-Keys aus Settings → API kopiert:
#    - SUPABASE_URL
#    - SUPABASE_ANON_KEY
#    - SUPABASE_SERVICE_ROLE_KEY
# ✅ DATABASE_URL aus Settings → Database kopiert
# ✅ NEXTAUTH_SECRET generiert (openssl rand -base64 32)
# ✅ Vercel-Projekt erstellt und GitHub-Repo verknüpft
# ✅ Environment Variables in Vercel gesetzt:
#    - SUPABASE_URL
#    - SUPABASE_ANON_KEY
#    - SUPABASE_SERVICE_ROLE_KEY
#    - DATABASE_URL
#    - NEXTAUTH_URL (wird automatisch von Vercel gesetzt)
#    - NEXTAUTH_SECRET
# ✅ Optional: Webhook-Tokens für n8n-Integration
