# ===========================================
# PRODUKTIONS-KONFIGURATION (VERCEL)
# ===========================================
# Diese Werte werden in Vercel Environment Variables gesetzt:

# Für Produktion:
NEXT_PUBLIC_SUPABASE_URL="https://jqxegatzjkusxihkyvwd.supabase.co"
NEXT_PUBLIC_SUPABASE_ANON_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpxeGVnYXR6amt1c3hpaGt5dndkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTk1NDY1MDksImV4cCI6MjA3NTEyMjUwOX0.xPDzrx0fcZdzI5c30d7ncVl5e81wNzqfG8Dh88lJLV4"
SUPABASE_SERVICE_ROLE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpxeGVnYXR6amt1c3hpaGt5dndkIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1OTU0NjUwOSwiZXhwIjoyMDc1MTIyNTA5fQ.ZA_eICl4XSNfs_ABdEsd1akTw_jn6NPZC7Sk2f69HPg"
DATABASE_URL="postgresql://postgres:9525663Caritas!@db.jqxegatzjkusxihkyvwd.supabase.co:5432/postgres"

# ===========================================
# LOKALE ENTWICKLUNG
# ===========================================
# Für lokale Entwicklung mit Supabase:

# 1. Erstellen Sie ein Supabase-Projekt
# 2. Kopieren Sie die Keys aus Settings → API:
#    - Project URL → NEXT_PUBLIC_SUPABASE_URL
#    - anon public → NEXT_PUBLIC_SUPABASE_ANON_KEY  
#    - service_role secret → SUPABASE_SERVICE_ROLE_KEY
# 3. Kopieren Sie die DATABASE_URL aus Settings → Database
# 4. Starten Sie die App mit: npm run dev

# ===========================================
# DEPLOYMENT CHECKLIST
# ===========================================
# Vor dem Deployment auf Vercel:

# ✅ Supabase-Projekt erstellt
# ✅ Supabase-Keys aus Settings → API kopiert:
#    - NEXT_PUBLIC_SUPABASE_URL
#    - NEXT_PUBLIC_SUPABASE_ANON_KEY
#    - SUPABASE_SERVICE_ROLE_KEY
# ✅ DATABASE_URL aus Settings → Database kopiert
# ✅ Vercel-Projekt erstellt und GitHub-Repo verknüpft
# ✅ Environment Variables in Vercel gesetzt:
#    - NEXT_PUBLIC_SUPABASE_URL
#    - NEXT_PUBLIC_SUPABASE_ANON_KEY
#    - SUPABASE_SERVICE_ROLE_KEY
#    - DATABASE_URL
# ✅ Optional: Webhook-Tokens für n8n-Integration
# INBOUND_WEBHOOK_TOKEN="ihr-webhook-token"
# N8N_OUTBOUND_WEBHOOK_URL="https://ihre-n8n-instanz.com/webhook/todo-app"
# N8N_OUTBOUND_TOKEN="ihr-n8n-token"

# ===========================================
# ZUSÄTZLICHE KONFIGURATION
# ===========================================
# Für erweiterte Funktionen (optional):

# Webhook-Konfiguration für n8n-Integration:
INBOUND_WEBHOOK_TOKEN="dapXWZ8f5f4PGFWiEQQTqFCtGH2ft2Mp7QUYVNu+w2k="
N8N_OUTBOUND_WEBHOOK_URL="https://your-n8n-instance.com/webhook/todo-app"
N8N_OUTBOUND_TOKEN="dapXWZ8f5f4PGFWiEQQTqFCtGH2ft2Mp7QUYVNu+w2k="

# Datenbank-Passwort (falls automatische Generierung nicht funktioniert):
SUPABASE_DB_PASSWORD="9525663Caritas!"

# Planka-Listen-Mapping (JSON-Format):
PLANKA_LIST_TO_STATUS='{"Priorität 1":"in_bearbeitung","Priorität 2":"offen","Priorität 3":"offen","Erledigt":"erledigt","Offen":"offen","In Bearbeitung":"in_bearbeitung"}'
