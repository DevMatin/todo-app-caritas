

# ===========================================
# PRODUKTIONS-KONFIGURATION (VERCEL)
# ===========================================
# Diese Werte werden in Vercel Environment Variables gesetzt:

# Für Produktion:
# NEXT_PUBLIC_SUPABASE_URL="https://your-project-ref.supabase.co"
# NEXT_PUBLIC_SUPABASE_ANON_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.your-anon-key"
# SUPABASE_SERVICE_ROLE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.your-service-role-key"
# DATABASE_URL="postgresql://postgres:[PASSWORD]@db.[PROJECT_REF].supabase.co:5432/postgres"

# ===========================================
# LOKALE ENTWICKLUNG
# ===========================================
# Für lokale Entwicklung mit Supabase:

# 1. Erstellen Sie ein Supabase-Projekt
# 2. Kopieren Sie die Keys aus Settings → API:
#    - Project URL → NEXT_PUBLIC_SUPABASE_URL
#    - anon public → NEXT_PUBLIC_SUPABASE_ANON_KEY  
#    - service_role secret → SUPABASE_SERVICE_ROLE_KEY
# 3. Kopieren Sie die DATABASE_URL aus Settings → Database
# 4. Starten Sie die App mit: npm run dev

# ===========================================
# DEPLOYMENT CHECKLIST
# ===========================================
# Vor dem Deployment auf Vercel:

# ✅ Supabase-Projekt erstellt
# ✅ Supabase-Keys aus Settings → API kopiert:
#    - NEXT_PUBLIC_SUPABASE_URL
#    - NEXT_PUBLIC_SUPABASE_ANON_KEY
#    - SUPABASE_SERVICE_ROLE_KEY
# ✅ DATABASE_URL aus Settings → Database kopiert
# ✅ Vercel-Projekt erstellt und GitHub-Repo verknüpft
# ✅ Environment Variables in Vercel gesetzt:
#    - NEXT_PUBLIC_SUPABASE_URL
#    - NEXT_PUBLIC_SUPABASE_ANON_KEY
#    - SUPABASE_SERVICE_ROLE_KEY
#    - DATABASE_URL
# ✅ Optional: Webhook-Tokens für n8n-Integration
