version: '3.8'

services:
  db:
    image: postgres:16-alpine
    container_name: todo-app-db
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-todo}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - todo-network
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: Dockerfile.ultra-simple
    container_name: todo-app-web
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-todo}?schema=public
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3003}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      BCRYPT_SALT_ROUNDS: ${BCRYPT_SALT_ROUNDS:-10}
      NODE_ENV: production
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${APP_PORT:-3003}:3000"
    command: sh -c "npx prisma migrate deploy && npm start"
    networks:
      - todo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  db_data:
    driver: local

networks:
  todo-network:
    driver: bridge
